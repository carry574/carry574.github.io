<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript关键特性</title>
      <link href="/2022/02/01/JavaScript%E5%85%B3%E9%94%AE%E7%89%B9%E6%80%A7/"/>
      <url>/2022/02/01/JavaScript%E5%85%B3%E9%94%AE%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h3 id="数组语法"><a href="#数组语法" class="headerlink" title="数组语法"></a>数组语法</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">var myarray1 = new Array(1, 2, 3, 4, 5); // 创建数组同时赋值var myarray2 = [1, 2, 3, 4, 5]; // 直接输入一个数组（称“字面量数组”） console.log(myarray1);console.log(myarray2);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr /><h3 id="数组序号"><a href="#数组序号" class="headerlink" title="数组序号"></a>数组序号</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">索引值从0开始var color = ["red", "green", "blue", "yellow"];console.log(color[0]); // returns "red"console.log(color[1]); // returns "green"console.log(color[2]); // returns "blue"console.log(color[3]); // returns "yellow"console.log(color[4]); // returns undefinedconsole.log(color[0]);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 多维数组<pre class="line-numbers language-html" data-language="html"><code class="language-html">var student = [      ["张三", "男", "18"],     ["李四", "女", "20"],  ];console.log(student[0][2]); // returns "18"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 修改数组<pre class="line-numbers language-html" data-language="html"><code class="language-html">var color = ["red", "green", "blue", "yellow"];color[0] = "black";console.log(color); // returns ["black", "green", "blue", "yellow"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr />### 获取数组长度<pre class="line-numbers language-html" data-language="html"><code class="language-html">var color = ["red", "green", "blue", "yellow"];console.log(color.length); // returns 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr />### 通过 split() 方法，将字符串转换为数组<pre class="line-numbers language-html" data-language="html"><code class="language-html">console.log("1:2:3:4".split(":")); // returns ["1", "2", "3", "4"]console.log("|a|b|c".split("|")); // returns ["", "a", "b", "c"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr />### join() 方法将数组转换为字符串<pre class="line-numbers language-html" data-language="html"><code class="language-html">console.log(["1", "2", "3", "4"].join(":")); // returns "1:2:3:4"console.log(["", "a", "b", "c"].join("|")); // returns "|a|b|c"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr />### push() 方法<pre class="line-numbers language-html" data-language="html"><code class="language-html">var arr = ["1", "2", "3", "4"];console.log(arr.push("5", "6"));console.log(arr); // returns ["1", "2", "3", "4", "5", "6"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr />### toString()方法把数字转换成字符串<pre class="line-numbers language-html" data-language="html"><code class="language-html">var myNum = 123;var myString = myNum.toString();// typeof 是判断数据类型console.log(typeof myString);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr />### index of()方法来完成查找<pre class="line-numbers language-html" data-language="html"><code class="language-html">"Blue Sky".indexOf("Blue"); // returns  0"Blue Sky".indexOf("Ble"); // returns -1"Blue Sky".indexOf("Sky", 0); // returns  5"Blue Sky".indexOf("Sky", -1); // returns  5"Blue Sky".indexOf("Sky", 5); // returns  5"Blue Sky".indexOf("Sky", 9); // returns -1"Blue Sky".indexOf("", 0); // returns  0"Blue Sky".indexOf("", 5); // returns 5"Blue Sky".indexOf("", 9); // returns 8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 字符串方法 toLowerCase() 和 toUpperCase() 字符串并将所有字符分别转换为小写或大写<pre class="line-numbers language-html" data-language="html"><code class="language-html">var string = "I like study";console.log(string.toLowerCase()); // returns "i like study"console.log(string.toUpperCase()); // returns "I LIKE STUDY"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr />### 数字 + 字符串 = 字符串<pre class="line-numbers language-html" data-language="html"><code class="language-html">var numtosTring = 12 + "";console.log(typeof numtosTring);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr />### number() 字符串转换为数值<pre class="line-numbers language-html" data-language="html"><code class="language-html">var num1 = Number(true);console.log(num1); // true 返回 1，false 返回 0var num2 = Number(undefined);console.log(num2); // 返回 NaNvar num3 = Number(null);console.log(num3); // 返回 0var num4 = Number("syl");console.log(num4); // 返回 NaNvar num5 = Number("   ");console.log(num5); // 如果是空字符串返回 0var num6 = Number(123);console.log(num6); // 返回123，如果是数字型的字符，返回数字var num7 = Number("123abc");console.log(num7); // 返回 NaN<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### parseInt() 把字符串转换成整数<pre class="line-numbers language-html" data-language="html"><code class="language-html">var num1 = parseInt("12.3abc");console.log(num1); // 返回 12，如果第一个字符是数字会解析知道遇到非数字结束，只取整，不是约等于var num2 = parseInt("abc123");console.log(num2); // 返回 NaN，如果第一个字符不是数字或者符号就返回 NaNvar num3 = parseInt("");console.log(num3); // 空字符串返回 NaN，但是 Number("")返回 0var num4 = parseInt("520");console.log(num4); // 返回 520var num5 = parseInt("0xA");console.log(num5); // 返回 10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### if 条件语句<pre class="line-numbers language-html" data-language="html"><code class="language-html">if (3 > 2) &#123;console.log("我真帅");&#125; else &#123;console.log("不可能");&#125;结果输出为：我真帅<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### if else 条件语句<pre class="line-numbers language-html" data-language="html"><code class="language-html">var d = new Date().getDay();        if (d == 0) &#123;            console.log("今天星期天");        &#125; else if (d == 1) &#123;            console.log("今天星期一");        &#125; else if (d == 2) &#123;            console.log("今天星期二");        &#125; else &#123;            console.log("好多啊，我不想写了");        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### switch case 语句<pre class="line-numbers language-html" data-language="html"><code class="language-html">var d = new Date().getDay();        switch (d) &#123;            case 0:                console.log("今天星期天");                break;            case 1:                console.log("今天星期一");                break;            case 2:                console.log("今天星期二");                break;            case 3:                console.log("今天星期三");                break;            case 4:                console.log("今天星期四");                break;            case 5:                console.log("今天星期五");                break;            default:                console.log("今天星期六");                break;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 三元运算<pre class="line-numbers language-html" data-language="html"><code class="language-html">条件表达式？结果 1:结果 23 > 2 ? console.log("3 比 2 大") : console.log("3 比 2 小");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr />### For 循环<pre class="line-numbers language-html" data-language="html"><code class="language-html">for (var i = 1; i &lt;= 100; i++) &#123;   console.log(i);&#125;<p>break 跳出循环<br>continue 跳出迭代<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>:hexoPostRenderEscape–&gt;</p><hr />### while 循环<pre class="line-numbers language-html" data-language="html"><code class="language-html">var i = 1;  while (i &lt;= 100) &#123;  console.log(i);  i++;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 创建函数<pre class="line-numbers language-html" data-language="html"><code class="language-html">function f(a, b) &#123;  console.log(a + b);&#125; // 创建一个名为 f 的函数，它有两个形参 a，b                console.log(f(2, 3)); // 调用函数 f，传入实参 2 和 3，最终运行结果为在控制台上打印出 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr /><ul><li>sort() 方法，将数组进行排序。</li><li>shift() 方法，删除并返回数组的第一个元素。</li><li>unshift() 方法，向数组的开头添加一个或更多元素，并返回新的长度。</li><li>slice() 方法，从某个已有的数组返回选定的元素。</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html">var arr1 = ["a", "z", "k", "w", "x"];      document.write(arr1 + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      document.write(arr1.sort()+ "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>" + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      var arr2 = [11,55,22,44,66,33];      document.write(arr2 + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      document.write(arr2.sort() + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>" + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      var arr3 = [1,22,44,6,55,5,2,4,66];      document.write(arr3 + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      document.write(arr3.sort() + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>" + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      function sortNum1(a, b)&#123;          return a - b; // 从小到大排序      &#125;      var arr4 = [1,22,44,6,55,5,2,4,66];      document.write(arr4 + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      document.write(arr4.sort(sortNum1) + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>" + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      function sortNum2(a,b)&#123;          return b - a; // 从大到小排序      &#125;      var arr4 = [1,22,44,6,55,5,2,4,66];      document.write(arr4 + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");      document.write(arr4.sort(sortNum2) + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>" + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### charAt() 方法，获取指定位置处字符<pre class="line-numbers language-html" data-language="html"><code class="language-html">var str = "Hello world!";document.write(str.charAt(2));// 以上代码输出为 l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr />### charCodeAt()方法,获取指定位置处字符的 Unicode 编码<pre class="line-numbers language-html" data-language="html"><code class="language-html">var str = "Hello world!";document.write(str.charCodeAt(2));// 以上代码输出为 l08<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr /><h3 id="concat-方法"><a href="#concat-方法" class="headerlink" title="concat() 方法"></a>concat() 方法</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">- concat() 方法，连接字符串，等效于 “+”，“+” 更常用。与数组中的 concat() 方法相似。- slice() 方法，提取字符串的片断，并在新的字符串中返回被提取的部分（字符串- indexOf() 方法，检索字符串。- toString() 方法，返回字符串。- toLowerCase() 方法，把字符串转换为小写。- toUpperCase() 方法，把字符串转换为大写。- replace() 方法，替换字符串中的某部分。- split() 方法，把字符串分割为字符串数组。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### Date 对象方法：<pre class="line-numbers language-html" data-language="html"><code class="language-html">Date()：返回当日的日期和时间（输出的是中国标准时间）。      getDate()：从 Date 对象返回一个月中的某一天 (1 ~ 31)。      getDay()：从 Date 对象返回一周中的某一天 (0 ~ 6)。      getMonth()：从 Date 对象返回月份 (0 ~ 11)。      getFullYear()：从 Date 对象以四位数字返回年份。      getHours()：返回 Date 对象的小时 (0 ~ 23)。      getMinutes()：返回 Date 对象的分钟 (0 ~ 59)。      getSeconds()：返回 Date 对象的秒数 (0 ~ 59)。      getMilliseconds()：返回 Date 对象的毫秒(0 ~ 999)。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### Math 对象的常用属性：<pre class="line-numbers language-html" data-language="html"><code class="language-html">E ：返回常数 e (2.718281828...)。      LN2 ：返回 2 的自然对数 (ln 2)。      LN10 ：返回 10 的自然对数 (ln 10)。      LOG2E ：返回以 2 为底的 e 的对数 (log2e)。      LOG10E ：返回以 10 为底的 e 的对数 (log10e)。      PI ：返回 π（3.1415926535...)。      SQRT1_2 ：返回 1/2 的平方根。      SQRT2 ：返回 2 的平方根。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### Math 对象的常用方法：<pre class="line-numbers language-html" data-language="html"><code class="language-html">abs(x) ：返回 x 的绝对值。      round(x) ：返回 x 四舍五入后的值。      sqrt(x) ：返回 x 的平方根。      ceil(x) ：返回大于等于 x 的最小整数。      floor(x) ：返回小于等于 x 的最大整数。      sin(x) ：返回 x 的正弦。      cos(x) ：返回 x 的余弦。      tan(x) ：返回 x 的正切。      acos(x) ：返回 x 的反余弦值（余弦值等于 x 的角度），用弧度表示。      asin(x) ：返回 x 的反正弦值。      atan(x) ：返回 x 的反正切值。      exp(x) ：返回 e 的 x 次幂 (e^x)。      pow(n, m) ：返回 n 的 m 次幂 (nm)。      log(x) ：返回 x 的自然对数 (ln x)。      max(a, b) ：返回 a, b 中较大的数。      min(a, b) ：返回 a, b 中较小的数。      random() ：返回大于 0 小于 1 的一个随机数。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 通过对象字面量来创建对象<pre class="line-numbers language-html" data-language="html"><code class="language-html">var student = &#123;        name: "zhangsan",        age: 18,        gender: "male",        sayHi: function () &#123;            console.log("hi,my name is " + this.name);        &#125;,&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 通过 new Object() 创建对象<pre class="line-numbers language-html" data-language="html"><code class="language-html">var student = new Object();        (student.name = "zhangsan"),        (student.age = 18),        (student.gender = "male"),        (student.sayHi = function () &#123;            console.log("hi,my name is " + this.name);        &#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 通过工厂函数创建对象<pre class="line-numbers language-html" data-language="html"><code class="language-html">function createStudent(name, age, gender) &#123;        var student = new Object();        student.name = name;        student.age = age;        student.gender = gender;        student.sayHi = function () &#123;            console.log("hi,my name is " + this.name);        &#125;;        return student;        &#125;        var s1 = createStudent("zhangsan", 18, "male");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 自定义构造函数<pre class="line-numbers language-html" data-language="html"><code class="language-html">function Student(name, age, gender) &#123;       this.name = name;       this.age = age;       this.gender = gender;       this.sayHi = function () &#123;           console.log("hi,my name is " + this.name);       &#125;;       &#125;       var s1 = new Student("zhangsan", 18, "male");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 通过 for...in 语句用于遍历数组或者对象的属性,对数组或者对象的属性进行循环操作<pre class="line-numbers language-html" data-language="html"><code class="language-html">var student = &#123;        name: "zhangsan",        age: 18,        gender: "male",        &#125;;        for (var key in student) &#123;            console.log(key);            console.log(student[key]);        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 格式化日期对象<pre class="line-numbers language-html" data-language="html"><code class="language-html">function formatDate(d) &#123;        // 如果 d 不是日期对象的实例，返回空        if (!d instanceof Date) &#123;          return;        &#125;        var year = d.getFullYear(),          month = d.getMonth() + 1,          date = d.getDate(),          hour = d.getHours(),          minute = d.getMinutes(),          second = d.getSeconds();        month = month &lt; 10 ? "0" + month : month;        date = date &lt; 10 ? "0" + date : date;        hour = hour &lt; 10 ? "0" + hour : hour;        minute = minute &lt; 10 ? "0" + minute : minute;        second = second &lt; 10 ? "0" + second : second;        return (          year +          "/" +          month +          "/" +          date +          " " +          hour +          ":" +          minute +          ":" +          second        );      &#125;      console.log(formatDate(new Date()));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 删除数组中的重复元素<pre class="line-numbers language-html" data-language="html"><code class="language-html">var array = ["x", "c", "a", "b", "c", "b", "c"];      function clearArray() &#123;        var o = &#123;&#125;;        for (var i = 0; i &lt; array.length; i++) &#123;          var item = array[i];          if (o[item]) &#123;            o[item]++;          &#125; else &#123;            o[item] = 1;          &#125;        &#125;        var tmpArray = [];        for (var key in o) &#123;          if (o[key] == 1) &#123;            tmpArray.push(key);          &#125; else &#123;            if (tmpArray.indexOf(key) == -1) &#123;              tmpArray.push(key);            &#125;          &#125;        &#125;        return tmpArray;      &#125;      console.log(clearArray(array));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr />### 判断一个字符串中出现次数最多的字符，并统计次数<pre class="line-numbers language-html" data-language="html"><code class="language-html">var str = "daskljahiagnaknscsjdwfanalvnahdpwod";      function max() &#123;        var o = &#123;&#125;;        for (var i = 0; i &lt; str.length; i++) &#123;          var item = str.charAt(i);          if (o[item]) &#123;            o[item]++;          &#125; else &#123;            o[item] = 1;          &#125;        &#125;        var max = 0;        for (var key in o) &#123;          if (max &lt; o[key]) &#123;            max = o[key];            var tmp;            tmp = key;          &#125;        &#125;        console.log("出现次数最多的字符是:" + tmp + "出现次数为：" + max);      &#125;      max(str);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 蓝桥云课 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5</title>
      <link href="/2022/02/01/HTML5/"/>
      <url>/2022/02/01/HTML5/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>300px<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span>支出表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>第一行第一列<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>第一行第二列<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>第二行第一列<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>第二行第二列<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <hr /><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>姓名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>性别:            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>男            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>女        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>爱好:            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>music<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>唱歌            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>runing<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>跑步            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiming<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>游泳        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>照片:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file_img<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>个人描述:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textarea<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>籍贯:            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>成都<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>成都<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>广州<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>四川<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>四川<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上海<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重置<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br /><hr /><h2 id="日期选择器"><a href="#日期选择器" class="headerlink" title="日期选择器"></a>日期选择器</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>日期选择器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        Date: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_date<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        Month: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>month<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_month<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>"nav"标签定义导航链接的部分<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>CSS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>JavaScript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>"header"标签定义文档的页眉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>网站标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>网站副标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>"footer"标签定义 section 或 document 的页脚<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Copyright @2013-2019 实验楼在线教育<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>aside> 标签表示一个和其余页面内容几乎无关的部分(侧边)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>实验楼简介<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>一个在线学习的网站<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>datalist 元素用于为文本框提供一个可供选择的列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myColor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>What's your favorite color?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myColor<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myColor<span class="token punctuation">"</span></span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySuggestion<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySuggestion<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>black<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>white<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>yellow<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>autocomplete 属性规定表单是否应该启用自动完成功能：自动完成允许浏览器预测对字段的输入，当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>on<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        Name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        E-mail: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>autofocus 属性规定在页面加载时，域自动地获得焦点。适用于所有"input"标签的类型。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        Name：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_name<span class="token punctuation">"</span></span> <span class="token attr-name">autofocus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>autofocus<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>placeholder属性提供一种提示(hint),描述输入域所期待的值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_search<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>实验楼<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>required 属性规定必须在提交之前填写输入域（不能为空）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_search<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>required<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>email 类型用于应该包含 e-mail 地址的输入域。在提交表单时，会自动验证 email 域的值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        E-mail: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_email<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>url 类型用于应该包含 URL 地址的输入域。在提交表单时，会自动验证 url 域的值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Url: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_url<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><h2 id="Canvas绘制三角形"><a href="#Canvas绘制三角形" class="headerlink" title="Canvas绘制三角形"></a>Canvas绘制三角形</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>使用canvas绘制三角形<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mycanvasone<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>520px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1314px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        对不起，你的浏览器不支持canvas    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">//获取canvas元素</span>        <span class="token keyword">var</span> myCanvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"mycanvasone"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//获取Context上下文</span>        <span class="token keyword">var</span> ctx <span class="token operator">=</span> myCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 开始路径绘制</span>        ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置路径起点，坐标为(20,20)</span>        ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加一个(200,200)的新点</span>        ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加一个(400,20)的新点</span>        ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//创建从当前点回到起始点的路径</span>        ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置线宽</span>        ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span>        <span class="token comment">// 设置线的颜色</span>        ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">"#9b9b9b"</span><span class="token punctuation">;</span>        <span class="token comment">// 绘制已定义的路径</span>        ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><h2 id="简单Web留言本"><a href="#简单Web留言本" class="headerlink" title="简单Web留言本"></a>简单Web留言本</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>简单Web留言本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>memo<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>新增留言<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>saveStorage(<span class="token punctuation">'</span>memo<span class="token punctuation">'</span>);<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>清空数据<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clearStorage();<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>清空最后一个数据<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clearsingleStorage();<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">//savaStorage是一个新增留言的函数</span>        <span class="token keyword">function</span> <span class="token function">saveStorage</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//获取textarea的value值</span>            <span class="token keyword">var</span> data <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment">//获取当前时间</span>            <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//将当前时间作为键名，textarea的value值（也就是用户输入的值）的值作为键值</span>            localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//显示留言</span>            <span class="token function">showMsg</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//showMsg是一个显示留言的函数</span>        <span class="token keyword">function</span> <span class="token function">showMsg</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token string">'&lt;table border="1">'</span><span class="token punctuation">;</span>            <span class="token comment">//遍历本地储存数据</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> localStorage<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//获取key值</span>                <span class="token keyword">var</span> key <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//获取value值</span>                <span class="token keyword">var</span> value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//显示数据</span>                result <span class="token operator">+=</span> <span class="token string">"&lt;tr>&lt;td>"</span> <span class="token operator">+</span> value <span class="token operator">+</span> <span class="token string">"&lt;/td>&lt;td>"</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">"&lt;/td>&lt;/tr>"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            result <span class="token operator">+=</span> <span class="token string">"&lt;/table>"</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> target <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            target<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> result<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//显示留言</span>        <span class="token function">showMsg</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//clearStorage是一个清空留言的函数</span>        <span class="token keyword">function</span> <span class="token function">clearStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//清空数据</span>            localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//显示留言</span>            <span class="token function">showMsg</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//clearsingleStorage是一个删除单个数据的函数</span>        <span class="token keyword">function</span> <span class="token function">clearsingleStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//显示留言</span>            <span class="token function">showMsg</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 蓝桥云课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端知识图谱</title>
      <link href="/2022/01/23/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
      <url>/2022/01/23/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="网络知识"><a href="#网络知识" class="headerlink" title="网络知识"></a>网络知识</h2><ol><li>网络工作原理<br>计算机网络原理：<a href="https://www.bilibili.com/video/BV1xJ41137Q3">https://www.bilibili.com/video/BV1xJ41137Q3</a></li><li>什么是HTTP<br>HTTP协议详解：<a href="https://www.bilibili.com/video/BV1js411g7Fw">https://www.bilibili.com/video/BV1js411g7Fw</a></li><li>浏览器及工作方式<br>浏览器是如何运作的？：<a href="https://www.bilibili.com/video/BV1x54y1B7RE">https://www.bilibili.com/video/BV1x54y1B7RE</a></li><li>DNS 及其工作原理<br>DNS基本工作原理：<a href="https://www.bilibili.com/video/BV1GW411j7Ts">https://www.bilibili.com/video/BV1GW411j7Ts</a><br>直观DNS科普：<a href="https://www.bilibili.com/video/BV1F54y1R7BC">https://www.bilibili.com/video/BV1F54y1R7BC</a></li><li>域名相关知识<br>域名解析完整讲解：<a href="https://www.bilibili.com/video/BV1zA411x7Pj">https://www.bilibili.com/video/BV1zA411x7Pj</a></li><li>云服务相关知识<br>揭秘阿里云服务器：<a href="https://www.bilibili.com/video/BV1Rt411u7k4">https://www.bilibili.com/video/BV1Rt411u7k4</a><h2 id="超文本标记语言"><a href="#超文本标记语言" class="headerlink" title="超文本标记语言"></a>超文本标记语言</h2>（HTML）</li><li>HTML基础知识学习<br>HTML全套基础教程：<a href="https://www.bilibili.com/video/BV11t411K74Q">https://www.bilibili.com/video/BV11t411K74Q</a></li><li>HTML 编写规则 和语义化写法<br>HTML 速成：<a href="https://www.bilibili.com/video/BV1vs411M7aT">https://www.bilibili.com/video/BV1vs411M7aT</a></li><li>表单和验证<br>html5表单验证：<a href="https://www.bilibili.com/video/BV16K4y1Z7Gb">https://www.bilibili.com/video/BV16K4y1Z7Gb</a></li><li>公约和最佳实践方法<br>前端代码规范秘籍：<a href="https://www.bilibili.com/video/BV19P4y147Jz">https://www.bilibili.com/video/BV19P4y147Jz</a></li><li>SEO 基础知识<br>SEO优化学习教程：<a href="https://www.bilibili.com/video/BV1fE411J7ya">https://www.bilibili.com/video/BV1fE411J7ya</a><br>层叠样式表<br>（CSS)</li><li>CSS 基础知识学习<br>CSS3基础教程：<a href="https://www.bilibili.com/video/BV1Bx411u7cS">https://www.bilibili.com/video/BV1Bx411u7cS</a><br>CSS3全套教程：<a href="https://www.bilibili.com/video/BV1et411q74F">https://www.bilibili.com/video/BV1et411q74F</a></li><li>页面切图和布局实现<ul><li>浮动布局</li><li>浮动布局：<a href="https://www.bilibili.com/video/BV1Zs411j7Z3">https://www.bilibili.com/video/BV1Zs411j7Z3</a></li><li>定位布局</li><li>CSS定位布局：<a href="https://www.bilibili.com/video/BV1ni4y1g7tc">https://www.bilibili.com/video/BV1ni4y1g7tc</a></li><li>Display</li><li>display&amp;visibility：<a href="https://www.bilibili.com/video/BV1HJ411M7CM">https://www.bilibili.com/video/BV1HJ411M7CM</a></li><li>盒子模型</li><li>CSS盒子模型与定位：<a href="https://www.bilibili.com/video/BV1P7411G7BW">https://www.bilibili.com/video/BV1P7411G7BW</a></li><li>Grid 布局</li><li>如何用grid：<a href="https://www.bilibili.com/video/BV14C4y1W7oA">https://www.bilibili.com/video/BV14C4y1W7oA</a></li><li>Flex 布局</li><li>Flex伸缩布局：<a href="https://www.bilibili.com/video/BV1BJ41197XE">https://www.bilibili.com/video/BV1BJ41197XE</a></li></ul></li><li>页面响应式布局设计<br>六个案例学会响应式布局：<a href="https://www.bilibili.com/video/BV1ov411k7sm">https://www.bilibili.com/video/BV1ov411k7sm</a><br>浏览器脚本语言<br>(JavaScript)</li><li>JavaScript基础语法和知识<br>JavaScript基础语法：<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha">https://www.bilibili.com/video/BV1Sy4y1C7ha</a></li><li>使用JavaScript 操作 DOM元素<br>JS必会的DOM BOM操作：<a href="https://www.bilibili.com/video/BV1k4411w7sV">https://www.bilibili.com/video/BV1k4411w7sV</a></li><li>Ajax 异步请求相关知识学习<br>Ajax入门到精通：<a href="https://www.bilibili.com/video/BV1WC4y1b78y">https://www.bilibili.com/video/BV1WC4y1b78y</a></li><li>ES6 以上版本 的JavaScript<br>ES6-ES11新特性：<a href="https://www.bilibili.com/video/BV1uK411H7on">https://www.bilibili.com/video/BV1uK411H7on</a><h2 id="版本控制管理系统"><a href="#版本控制管理系统" class="headerlink" title="版本控制管理系统"></a>版本控制管理系统</h2>Version Control System</li><li>Git的基本用法<br>Git最新教程：<a href="https://www.bilibili.com/video/BV1FE411P7B3">https://www.bilibili.com/video/BV1FE411P7B3</a></li><li>相关平台/软件的使用<ul><li>GitHub</li><li>十分钟学会Github：<a href="https://www.bilibili.com/video/BV1yo4y1d7UK">https://www.bilibili.com/video/BV1yo4y1d7UK</a></li><li>GitLab</li><li>gitlab使用说明：<a href="https://www.bilibili.com/video/BV11E411x7Uv">https://www.bilibili.com/video/BV11E411x7Uv</a></li><li>Gitee</li><li>这个看中文网址就可以了，目前B站还没有很好的视频介绍<br>网络安全相关知识<br>Web Security Knowledge</li></ul></li><li>HTTPS 原理和使用<br>你连HTTPS原理都不懂：<a href="https://www.bilibili.com/video/BV1Up4y1i7PG">https://www.bilibili.com/video/BV1Up4y1i7PG</a></li><li>CORS 跨域请求和安全知识<br>什么是CORS：<a href="https://www.bilibili.com/video/BV1Kt411E76z">https://www.bilibili.com/video/BV1Kt411E76z</a></li><li>内容安全策略<br>网络渗透：<a href="https://www.bilibili.com/video/BV1kh411W7Vv">https://www.bilibili.com/video/BV1kh411W7Vv</a></li><li>OWASP 安全风险知识<br>OWASP  TOP10：<a href="https://www.bilibili.com/video/BV1ey4y1V7Jj">https://www.bilibili.com/video/BV1ey4y1V7Jj</a><br>包管理工具<br>Package Managers</li><li>npm<br>包管理工具：<a href="https://www.bilibili.com/video/BV1Dv411W7XP">https://www.bilibili.com/video/BV1Dv411W7XP</a></li><li>yarn<br>Yarn入门：<a href="https://www.imooc.com/learn/766">https://www.imooc.com/learn/766</a>  (B站没有，推荐这个免费)<br>CSS 预处理 语言<br>CSS Preprocessors</li><li>Sass<br>SCSS从入门到实战：<a href="https://www.bilibili.com/video/BV1Zg4y1v75U">https://www.bilibili.com/video/BV1Zg4y1v75U</a></li><li>PostCSS<br>B站没太好的视频，建议买书《深入PostCSS Web设计》</li><li>Less<br>前端less教程：<a href="https://www.bilibili.com/video/BV1YW411T7vd">https://www.bilibili.com/video/BV1YW411T7vd</a><br>构建工具<br>Build Tools</li><li>任务执行命令<br>[Task Runners]<ul><li>npm scripts</li><li>npm包管理应用：<a href="https://www.bilibili.com/video/BV1Dv411W7XP">https://www.bilibili.com/video/BV1Dv411W7XP</a></li><li>Gulp</li><li>Gulp入门：<a href="https://www.bilibili.com/video/BV1yA411s72G">https://www.bilibili.com/video/BV1yA411s72G</a></li></ul></li><li>打包工具<ul><li>Webpack</li><li>Webpack从入门到精通：<a href="https://www.bilibili.com/video/BV1e7411j7T5">https://www.bilibili.com/video/BV1e7411j7T5</a></li><li>Parcel</li><li>Parcel初体验：<a href="https://www.bilibili.com/video/BV1Pa4y147Kf">https://www.bilibili.com/video/BV1Pa4y147Kf</a></li></ul></li><li>代码格式化工具<ul><li>Prettier</li><li>Prettier和ESLint使用：<a href="https://www.bilibili.com/video/BV183411r7YK">https://www.bilibili.com/video/BV183411r7YK</a></li><li>ESLint</li><li>ESLint基础入门：<a href="https://space.bilibili.com/390120104/search/video?keyword=ESLint">https://space.bilibili.com/390120104/search/video?keyword=ESLint</a><h2 id="三大前端框架"><a href="#三大前端框架" class="headerlink" title="三大前端框架"></a>三大前端框架</h2>Web Framework<br>React.js<br>React基础视频：<a href="https://www.bilibili.com/video/BV1g4411i7po">https://www.bilibili.com/video/BV1g4411i7po</a><br>React全家桶：<a href="https://www.bilibili.com/video/BV1wy4y1D7JT">https://www.bilibili.com/video/BV1wy4y1D7JT</a><br>React实战博客：<a href="https://www.bilibili.com/video/BV1CJ411377B">https://www.bilibili.com/video/BV1CJ411377B</a><br>React商城实战：<a href="https://www.bilibili.com/video/BV1i5411c7xp">https://www.bilibili.com/video/BV1i5411c7xp</a><br>Vue.js<br>Vue2全家桶：<a href="https://www.jspang.com/detailed?id=57">https://www.jspang.com/detailed?id=57</a><br>Vue3全家桶：<a href="https://www.jspang.com/detailed?id=67">https://www.jspang.com/detailed?id=67</a><br>vuejs从入门到精通：<a href="https://www.bilibili.com/video/BV1Zy4y1K7SH">https://www.bilibili.com/video/BV1Zy4y1K7SH</a><br>Angular<br>Angular基础：<a href="https://www.bilibili.com/video/BV1Wx411R7qt">https://www.bilibili.com/video/BV1Wx411R7qt</a><h2 id="Web-组件化编程"><a href="#Web-组件化编程" class="headerlink" title="Web 组件化编程"></a>Web 组件化编程</h2>Web Components<br>HTML Templates<br>Custom Elements<br>Shadow DOM<br>概要: 此部分内容没有找到合适视频<h2 id="CSS-相关框架"><a href="#CSS-相关框架" class="headerlink" title="CSS 相关框架"></a>CSS 相关框架</h2>CSS Frameworks<br>BootStrap<br>一周学会BootStrap：<a href="https://www.bilibili.com/video/BV1Lx411v73k">https://www.bilibili.com/video/BV1Lx411v73k</a><br>Material UI<br>Material  UI入门教程：<a href="https://www.bilibili.com/video/BV12J411s75b">https://www.bilibili.com/video/BV12J411s75b</a><br>Materialize CSS<br>Materialize CSS Crash Course：<a href="https://www.bilibili.com/video/BV1gx411h7Y5">https://www.bilibili.com/video/BV1gx411h7Y5</a><br>ReactStrap<h2 id="JavaScript-语法糖"><a href="#JavaScript-语法糖" class="headerlink" title="JavaScript 语法糖"></a>JavaScript 语法糖</h2>Type Checkers<br>TypeScript<br>TypeScript从入门到精通：<a href="https://www.bilibili.com/video/BV1qV41167VD">https://www.bilibili.com/video/BV1qV41167VD</a><br>Flow<h2 id="服务端渲染"><a href="#服务端渲染" class="headerlink" title="服务端渲染"></a>服务端渲染</h2>Server Side  Rendering （SSR）<br>React.js</li><li>Next.js</li><li>Next.js入门教程：<a href="https://www.bilibili.com/video/BV13441117KK">https://www.bilibili.com/video/BV13441117KK</a></li><li>GatsbyJS</li><li>GatsbyJS 实战：<a href="https://www.bilibili.com/video/BV1i4411T7AR">https://www.bilibili.com/video/BV1i4411T7AR</a> （英文）<br>Vue.js</li><li>Nuxt.js</li><li>Nuxt.js入门：<a href="https://www.bilibili.com/video/BV1Xt41117Kg">https://www.bilibili.com/video/BV1Xt41117Kg</a><br>Angular</li><li>Universal<h2 id="图形化编程"><a href="#图形化编程" class="headerlink" title="图形化编程"></a>图形化编程</h2>GraphQL<br>Cocos Creator<br>Cocos 图形游戏开发：<a href="https://www.bilibili.com/video/BV1sA411Y7x4">https://www.bilibili.com/video/BV1sA411Y7x4</a><br>Three.js<br>Three.js基础教程-英文：<a href="https://www.bilibili.com/video/BV1ks411W78i">https://www.bilibili.com/video/BV1ks411W78i</a><br>Three.js教程：<a href="https://www.bilibili.com/video/BV1va4y1p7QB">https://www.bilibili.com/video/BV1va4y1p7QB</a><h2 id="静态站点生成器"><a href="#静态站点生成器" class="headerlink" title="静态站点生成器"></a>静态站点生成器</h2>Static Site Generators<br>Next.js<br>Next.js入门教程：<a href="https://www.bilibili.com/video/BV13441117KK">https://www.bilibili.com/video/BV13441117KK</a><br>GatsbyJS<br>GatsbyJS 实战：<a href="https://www.bilibili.com/video/BV1i4411T7AR">https://www.bilibili.com/video/BV1i4411T7AR</a> （英文）<br>Nuxt.js<br>Nuxt.js入门：<a href="https://www.bilibili.com/video/BV1Xt41117Kg">https://www.bilibili.com/video/BV1Xt41117Kg</a><br>Vuepress<br>Vuepress入门到精通：<a href="https://www.bilibili.com/video/BV1vb411m7NY">https://www.bilibili.com/video/BV1vb411m7NY</a><br>Hugo<br>10分钟搭建个人网站：<a href="https://www.bilibili.com/video/BV1x64y117PX">https://www.bilibili.com/video/BV1x64y117PX</a><h2 id="移动App开发"><a href="#移动App开发" class="headerlink" title="移动App开发"></a>移动App开发</h2>Mobile Applications<br>React  Native<br>ReactNatvie基础：<a href="https://www.bilibili.com/video/BV1Eg4y16735">https://www.bilibili.com/video/BV1Eg4y16735</a><br>ReactNatvie实战：<a href="https://www.bilibili.com/video/BV15K411s75p">https://www.bilibili.com/video/BV15K411s75p</a><br>UniApp<br>Uni-App从入门到实战：<a href="https://www.bilibili.com/video/BV1BJ411W7pX">https://www.bilibili.com/video/BV1BJ411W7pX</a><br>Uni-App美团外卖：<a href="https://www.bilibili.com/video/BV1Zt4y117RR">https://www.bilibili.com/video/BV1Zt4y117RR</a><br>Flutter<br>Flutter基础：<a href="https://www.bilibili.com/video/BV15t411U7yf">https://www.bilibili.com/video/BV15t411U7yf</a><br>Flutter实战：<a href="https://www.bilibili.com/video/BV1kt411B7mu">https://www.bilibili.com/video/BV1kt411B7mu</a><br>Ionic<br>Ionic入门：<a href="https://www.bilibili.com/video/BV1Ub41117q5">https://www.bilibili.com/video/BV1Ub41117q5</a><h2 id="桌面应用开发"><a href="#桌面应用开发" class="headerlink" title="桌面应用开发"></a>桌面应用开发</h2>Desktop Applications<br>Electron<br>Electron入门：<a href="https://www.bilibili.com/video/BV1QB4y1F722">https://www.bilibili.com/video/BV1QB4y1F722</a><br>Electron基础：<a href="https://www.bilibili.com/video/BV177411s7Lt">https://www.bilibili.com/video/BV177411s7Lt</a></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术胖收藏夹分享</title>
      <link href="/2022/01/23/%E6%8A%80%E6%9C%AF%E8%83%96%E6%94%B6%E8%97%8F%E5%A4%B9%E5%88%86%E4%BA%AB/"/>
      <url>/2022/01/23/%E6%8A%80%E6%9C%AF%E8%83%96%E6%94%B6%E8%97%8F%E5%A4%B9%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="自学前端程序-私藏工具和网站分享"><a href="#自学前端程序-私藏工具和网站分享" class="headerlink" title="自学前端程序 私藏工具和网站分享"></a>自学前端程序 私藏工具和网站分享</h1><h2 id="01-JavaScript"><a href="#01-JavaScript" class="headerlink" title="01.JavaScript"></a>01.JavaScript</h2><ul><li><a href="https://wangdoc.com/javascript/">JavaScript 教程 | 通俗易懂的JavaScript教程</a></li><li><a href="https://es6.ruanyifeng.com/">ES6 入门教程 | 通俗易懂的ES6入门教程</a></li><li><a href="https://javascript30.com/">JavaScript 30  |  使用原生JavaScript在30天内完成30个项目</a></li><li><a href="https://zh.javascript.info/">现代 JavaScript 教程 |  最近很流行的JavaScript教程</a></li><li><a href="https://blog.poetries.top/node-learning-notes/">Node.js学习指南 | 系统的Node.js学习教程和笔记系统整理</a></li><li><a href="https://github.com/ryanmcdermott/clean-code-javascript">JS 代码规范 | 优秀的 JS代码规范</a></li><li><a href="https://github.com/xcatliu/typescript-tutorial">TypeScript 教程 | 通俗易懂的TypeScript教程</a></li><li><a href="https://jspang.com/detailed?id=63">TypeScript 教程 |  最好的TypeScript 视频+图文教程</a></li></ul><h2 id="02-CSS样式"><a href="#02-CSS样式" class="headerlink" title="02.CSS样式"></a>02.CSS样式</h2><ul><li><a href="https://lhammer.cn/You-need-to-know-css/#/zh-cn/">CSS Tricks 效果大全 | CSS的各种效果实现 有很多动画效果</a></li><li><a href="https://github.com/chokcoco/CSS-Inspiration">CSS Inspiration |  CSS灵感的诞生地  我每天都的网站</a></li><li><a href="https://github.com/QiShaoXuan/css_tricks"> CSS 常用样式 |  有很多常用的CSS样式</a></li><li><a href="https://animista.net/"> Animista | CSS动画库  主打按需定制CSS动画效果</a></li><li><a href="https://animista.net/"> Animista | CSS动画库  主打按需定制CSS动画效果</a></li><li><a href="https://cssminifier.com/"> CSS Minifier | 在线CSS代码简化/压缩工具</a></li><li><a href="https://sass.bootcss.com/documentation"> Sass: Sass 文档 | Sass 中文网  成熟、稳定、强大的CSS扩展语言</a></li><li><a href="https://less.bootcss.com/"> Less 快速入门 | Less.js 中文文档 将CSS赋予了动态语言特性的样式语言</a></li><li><a href="https://stylus-lang.com/"> stylus | CSS扩展  富有变现里、动态、健壮的CSS</a></li></ul><h2 id="03-算法数据"><a href="#03-算法数据" class="headerlink" title="03.算法数据"></a>03.算法数据</h2><ul><li><a href="http://github.com/trekhleb/javascript-algorithms"> JavaScript 算法与数据结构 | 多种基于JavaScript的算法与数据结构</a></li><li><a href="https://github.com/azl397985856/leetcode"> leetcode 解题之路 |  私藏LeetCode解题攻略 </a></li><li><a href="https://github.com/MisterBooo/LeetCodeAnimation"> 五分钟学算法 |  每天拿出五分钟  学学算法  比如上个厕所就学了 </a></li><li><a href="https://github.com/biaochenxuying/blog/issues/43">数据结构与算法项目推荐 | Github上170K+Star的前端学习数据结构和算法题目 </a></li><li><a href="https://github.com/biaochenxuying/blog/issues/42">JavaScript  十大经典排序算法 | JavaScript排序必会题目  作者功力很深 值得学习 </a></li><li><a href="https://github.com/algorithm-visualizer/algorithm-visualizer">算法可视化工具 |  用可视化工具和交互方式 让你从代码中可视化算法 </a></li><li><a href="https://visualgo.net/en">算法可视化来源 </a></li><li><a href="https://github.com/skidding/illustrated-algorithms">算法的工作方式 | 变量和操作的可视化表示 增强了控制流和实际源代码 </a></li></ul><h2 id="04-前端面试"><a href="#04-前端面试" class="headerlink" title="04.前端面试"></a>04.前端面试</h2><ul><li><a href="https://blog.poetries.top/FE-Interview-Questions/">前端面试常考问题整理 |  按模块和知识点分类</a></li><li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions">前端开发面试题</a></li><li><a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions/">WEB前端面试宝典</a></li><li><a href="https://github.com/shfshanyue/blog/blob/master/post/juejin-interview.md">掘金前端面试题合集</a></li><li><a href="https://yuchengkai.cn/">前端面试图谱</a></li><li><a href="https://github.com/biaochenxuying/blog/issues/47">前端面试开源项目汇总 | Github上100K+ Star 的前端面试开源项目汇总</a></li></ul><h2 id="05-技术社区"><a href="#05-技术社区" class="headerlink" title="05.技术社区"></a>05.技术社区</h2><ul><li><a href="https://github.com/">GitHub  |  高质量内容创作和分享平台</a></li><li><a href="https://stackoverflow.com/">Stackoverflow |一个回答技术问题的网站</a></li><li><a href="https://juejin.cn/">掘金 | 国内的很多优质前端文章都掘金</a></li><li><a href="https://www.cnblogs.com/">博客园  | 一个很纯粹的技术博客平台</a></li><li><a href="https://www.zhihu.com/">知乎 |  很多程序人喜欢泡在知乎</a></li><li><a href="https://www.csdn.net/">CSDN  | 老牌社区  程序员必上的一个社区</a></li><li><a href="https://www.v2ex.com/">v2ex  | 程序员分享和探索的社区</a></li><li><a href="https://segmentfault.com/">segmentfault  | 低调技术博客社区</a></li><li><a href="https://cnodejs.org/">Node.js 中文社区 |  node专业中文社区</a></li><li><a href="https://www.smashingmagazine.com/">博客杂志站点 | 一个 web 技术类的博客杂志站点</a></li><li><a href="https://www.jstips.co/">JS 技术的网站 | 每天推出一个JS技巧的网站</a></li><li><a href="https://www.jstips.co/">W3Cplus | 推广国内行业的技术博客</a></li><li><a href="https://docschina.org/">印记中文 | 最权威的技术中文文档社区</a></li></ul><h2 id="06-前端博客"><a href="#06-前端博客" class="headerlink" title="06.前端博客"></a>06.前端博客</h2><ul><li><a href="https://jspang.com/">技术胖博客 |  专注前端 每年100集免费前端视频</a></li><li><a href="http://www.alloyteam.com/">腾讯Alloy Team  | 腾讯前端博客 每天必看</a></li><li><a href="https://isux.tencent.com/">腾讯用户体验博客 | 专注于前端用户体验</a></li><li><a href="https://fed.taobao.org/">淘系前端博客 |  淘宝前端博客 代表中国最强前端实力</a></li><li><a href="https://aotu.io/">京东凹凸实验室  |  京东前端技术博客</a></li><li><a href="https://zhuanlan.zhihu.com/ElemeFE">饿了么前端博客  |  知乎上的最强前端博客</a></li><li><a href="http://fex.baidu.com/">百度前端博客  |  百度前端团队旗下博客</a></li><li><a href="https://75.team/">360奇舞团  |  360公司前端团队</a></li><li><a href="https://tech.meituan.com/">美团技术博客  |  美团技术团队博客</a></li></ul><h2 id="07-构建工具"><a href="#07-构建工具" class="headerlink" title="07.构建工具"></a>07.构建工具</h2><ul><li><a href="https://www.npmjs.com/">NPM |  包管理 和 项目构建工具</a></li><li><a href="https://webpack.js.org/">webpack  | 前端最流行的项目构建工具</a></li><li><a href="https://yarnpkg.com/">Yarn  |  后起之秀 优秀的包管理和构建工具</a></li><li><a href="https://www.gulpjs.com.cn/">Gulp  |  老牌构建工具</a></li><li><a href="https://babeljs.io/">Babel  | ES6构建转换工具</a></li><li><a href="https://cn.eslint.org/">ESLint  | 可组装的JavaScript和JSX检查工具</a></li><li><a href="https://www.postcss.com.cn/">PostCSS | 用JavaScript转换CSS代码的工具</a></li></ul><h2 id="08-部署工具"><a href="#08-部署工具" class="headerlink" title="08.部署工具"></a>08.部署工具</h2><ul><li><a href="https://pages.github.com/">Github Page  | Github提供的免费静态网站托管服务</a></li><li><a href="https://www.netlify.com/">Netlify  |  30秒内部署你的网站</a></li><li><a href="https://vercel.com/">Vercel  |  快速部署你的网站 国外很流行</a></li><li><a href="https://surge.sh/">Surge  |  一个命令部署你的网站</a></li><li><a href="https://www.heroku.com/">Heroku  |  运动构建 、 运行你的网站和应用</a></li></ul><h2 id="09-静态站点搭建"><a href="#09-静态站点搭建" class="headerlink" title="09.静态站点搭建"></a>09.静态站点搭建</h2><ul><li><a href="https://hexo.io/zh-cn/">Hexo  |  最流行的静态博客程序 Markdown编写 生成静态站点</a></li><li><a href="https://www.vuepress.cn/">VuePress  |  Vue驱动的静态网站生成器</a></li><li><a href="https://www.gitbook.com/">GitBook  | 现代化的文档平台，支持团队协作</a></li></ul><h2 id="10-前端代码规范"><a href="#10-前端代码规范" class="headerlink" title="10.前端代码规范"></a>10.前端代码规范</h2><ul><li><a href="https://tgideas.qq.com/doc/index.html">Tgideas | 腾讯前端代码规范 值得参考</a></li><li><a href="https://guide.aotu.io/index.html">京东  |  京东前端代码规范文档 分类详细</a></li><li><a href="https://codeguide.bootcss.com/">Bootstrap编码规范  |  适合个人和小团队使用的代码规范 不复杂</a></li><li><a href="https://es6.ruanyifeng.com/#docs/style">ES6 编程风格  | 阮一峰编写的ES6代码规范  值得每个人阅读并参考</a></li><li><a href="https://github.com/airbnb/javascript">Airbnb  前端代码规范  |  国外企业的前端代码规范</a></li><li><a href="https://eslint.org/">ESLint  |  代码规范检查和格式化工具</a></li><li><a href="https://prettier.io/">Prettier  | VSCode 最热门的代码格式化工具  让你写出漂亮的代码</a></li></ul><h2 id="11-调试抓包"><a href="#11-调试抓包" class="headerlink" title="11.调试抓包"></a>11.调试抓包</h2><ul><li><a href="https://wproxy.org/whistle/">Whistle  |  代理抓包工具  我一直在用的工具 很好很强大</a></li><li><a href="https://www.telerik.com/fiddler">Fiddler  |  使用人数最多的抓包工具</a></li></ul><h2 id="12-在线工具"><a href="#12-在线工具" class="headerlink" title="12.在线工具"></a>12.在线工具</h2><ul><li><a href="https://codepen.io/">CodePen  |  前端在线测试和演示工具  国外站点</a></li><li><a href="https://caniuse.com/">Can  I  use |  Web前端兼容性列表</a></li><li><a href="https://tinypng.com/">TinyPNG  |  PNG/JPG 图片在线压缩工具</a></li><li><a href="https://www.umeng.com/">CNZZ |  老牌站点统计工具  5年前国内站长必上网站</a></li><li><a href="https://web.dev/measure/">web.dev  |  评测网站性能  基于Lighthouse</a></li><li><a href="https://www.shapedivider.app/">Shape Divider  | 定制各种形状SVG的工具</a></li><li><a href="https://gtmetrix.com/">GTmetrix  |  网页性能在线分析工具</a></li><li><a href="https://carbon.now.sh/">Carbon  |  代码转图片工具  </a></li><li><a href="https://www.wappalyzer.com/">Wappalyzer  |  检测某个网站的技术栈  </a></li><li><a href="https://unbug.github.io/codelf">CODEIF | 变量方法起名工具  人工智能加持  </a></li><li><a href="https://tool.lu/"> tool.lu  |  程序员在线工具大全   </a></li></ul><h2 id="13-开发工具"><a href="#13-开发工具" class="headerlink" title="13.开发工具"></a>13.开发工具</h2><ul><li><a href="https://code.visualstudio.com/"> VSCode  |  前端最流行的编辑器   </a></li><li><a href="https://www.sublimetext.com/"> Sublime Text  |  轻量级代码编辑工具 曾经我的最爱   </a></li><li><a href="https://www.jetbrains.com/webstorm/"> WebStom |  忠爱粉最多的编辑器 </a></li><li><a href="https://atom.io/"> Atom  |   用的人很多  我却不喜欢的编辑器 </a></li><li><a href="https://www.typora.io/"> Typora |  程序人Mrakdown笔记  一直在用的笔记工具 </a></li></ul><h2 id="14-开发者大会"><a href="#14-开发者大会" class="headerlink" title="14.开发者大会"></a>14.开发者大会</h2><ul><li><a href="https://fequan.com/"> Vue.js开发者大会 |  前端人必须关注的前端大会 </a></li><li><a href="https://jsconfchina.com/"> 中国JS开发者大会  |  公司每年必组织参加的技术大会 </a></li><li><a href="https://css.w3ctech.com/"> CSS开发者大会 |  提高CSS技术的开发者大会  打开视野 面向世界 </a></li><li><a href="https://www.alibabaf2e.com/"> D2前端开发者大会 |  阿里组织的大会 可以看直播  </a></li></ul><h2 id="15-WEB图标"><a href="#15-WEB图标" class="headerlink" title="15.WEB图标"></a>15.WEB图标</h2><ul><li><a href="http://www.fontawesome.com.cn/"> Font Awesome  |  网站开发最流行的图标集  </a></li><li><a href="https://feathericons.com/"> Feather |  简洁美观的开源图标  </a></li><li><a href="https://material.io/resources/icons/"> Material  Design Icons  |  轻快、精美的符号图标  </a></li><li><a href="https://tablericons.com/"> Tabler Icons | 681枚可定制的开源SVG图标  </a></li><li><a href="https://simpleicons.org/"> 常见品牌的SVG图标  </a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAY04  笔记</title>
      <link href="/2022/01/16/DAY04-%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/01/16/DAY04-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>1、开发第一个Java程序：HelloWorld</p><pre><code>1.1、程序写完之后，一定要Ctrl + S 进行保存    ⚠另外需要注意的是：Java源代码只要修改，必须重新编译。    重新生成.class字节码文件。1.2、编译阶段    怎么编译？使用什么命令？这个命令怎么用？    需要使用的命令是：javac.exe（存放在C盘的Java目录里）    这个命令需要先测试一下，打开DOS命令窗口，看看javac命令是否可用。    测试javac后发现windows找不到文件在哪？        配置path环境变量。        配置path环境变量的步骤：            桌面计算机上右键- -&gt;属性- -&gt;高级系统设置- -&gt;环境变量        让javac.exe能用，配置哪个路径到path中？            找到javac.exe的文件路径复制到path变量里。⚠注意：修改完环境变量后，DOS命令窗口必须关闭重新打开才会起作用。java命令怎么用？    语法格式：        javac java源文件的路径什么是java源文件？    java源文件的名字是以“.java”结尾，该文件中写了java源代码。    ○ java源文件的路径：直接把Java源文件拖入DOS命令窗口就出现java源文件的路径。    ○ 在java源文件上方的路径里输入cmd即可帮助cmd快速定位到java源文件路径。1.3、运行阶段    运行的前提是：class文件（字节码）生成了。没有字节码文件程序是无法运行的。        假设该文件的名字叫做：HelloWorld.class        那么HelloWorld就称为一个类名。    怎么运行？使用哪个命令？        使用JDK的bin目录下的：javac.exe命令来运行。    先在DOS命令窗口中测试javac.exe命令是否可以使用。        Java -version    &quot;java.exe“这个命令怎么用，语法格式是什么？？        格式：Java + 空格 +类名    运行java程序需要哪些步骤？        第一步：先使用cd命令切换到xxx.class文件所在的路径。            或者在文件所在路径输入cmd定位。        第二步：执行java 类名            切记：Java命令后面只要是跟路径，就一定不行，只能是跟类名。</code></pre><p>2、“java HelloWorld”的执行过程及原理</p><pre><code>C:\Users\Carry\Desktop\JAVA&gt;java java1 敲完回车后发生什么？    第一步：会先启动JVM（java虚拟机）    第二步：JVM启动之后，JVM会去启动&quot;类加载器classloader“        类加载器的作用：加载类的，本质上类加载器负责去找“类”对应的“字节码”文件。        假设是“java HelloWorld”，那么类加载器会去硬盘上搜索：HelloWorld.class文件。        假设是“java test”，那么类加载器会去硬盘上搜索：test.class文件。    类加载器如果在硬盘上找不到对应的字节码文件的话会报错，报错什么内容？            错误：找不到或无法加载主类        类加载器如果在硬盘上找到了对应的字节码文件，类加载器会将该字节码文件装载到JVM当中，JVM启动“解释器”将字节码解释为“10101011…”这种的二进制码，操作系统执行二进制码和硬件交互。问题1：默认情况下，类加载器去硬盘哪里找对应的字节码文件？    Java 类目执行后，类加载器会在当前路径下找对应的字节码文件加载。问题2：能不能给类加载器指定一个路径，让类加载器去指定的路径下加载字节码文件？    可以的，但我们要设置一个环境变量，叫做：class.path。问题3：class.path是一个环境变量，是给谁指路的？    是给“类加载器”指路的。    classpath环境变量不属于windows，classpath环境变量隶属于java。    在没有配置环境变量的classpath的时候，默认从但前路径下加载。    如果配置了classpath环境变量之后，只能去指定的路径下加载了。    ⚠非常重要的一个特点：配置了classpath=D:\xxxx目录之后，类加载器只会去xxxx目录找对应的字节码文件。        classpath环境变量不需要配置，到JavaWeb时才需要配置classpath环境变量。</code></pre><p>3、在高版本的JDK当中，有这样一个特性，可以一步到位：<br>    Java x\z\y.java<br>    java后面加源文件的路径。<br>    这个特性是为了简化开发而提出，但实际上底层的实现原理还是和以前一样的，以上命令在执行过程中，还是会先进行编译，然后再运行。<br>    并且以上的运行方式，编译生成的class文件在硬盘上不存在，看不见。</p><p>4、关于第一个Java程序代码的解释说明（注释）：<br>    注释在程序中不起作用，只是对程序进行解释说明。<br>    /* 1、什么是注释，有什么用？<br>        注释是对Java源代码的解释说明<br>        注释可以帮程序员更好地理解程序<br>    2、注释信息只保存在Java源文件当中，Java源文件编译生成的字节码class文件中是没有注释信息的<br>    3、程序员应有良好的写注释习惯。<br>    4、另外这种注释可以注释多行内容。 */</p><pre><code>// 这种是单行注释，只注释两个斜杠后面的内容。</code></pre><p>5、⚠注意：<br>    1、在JAVA中任何有效的代码必须写到“类体”当中，最外层必须是一个类的定义。<br>    2、public表示公开的，class表示定义一个类，Test是一个类名。类名后面必须是一对大括号，这一对大括号被称为“类体”<br>    3、括号必须是成对的。并且建议都要成对编写，这样才不会丢掉。{}、[]、()</p><p>public class Test  //声明/定义一个公开的类，起个名字叫Test<br>    {  //大括号内都是类体。<br>    //整个这一块的代码被称为：main方法（程序的入口，sun公司java语言规定的）<br>    public static void main(String[] args) {<br>    //JVM在执行程序的时候，会主动去找这样一个方法。没有这个规格的方法，程序就无法执行。<br>    //注意：方法必须放在“类体”中，不能放在“类体”外面。<br>    //注意：方法体由一行一行的java语句构成。<br>        System.out.println(“Test”);<br>    //每个语句都要以英文分号结束。<br>    //语句内容要加英文””双引号。数字可以不加双引号。<br>        System.out.println(“test2”);<br>    }<br>}<br>    大括号里有main方法可以编译运行。</p><p>1、一个java源文件可以定义多个class。<br>2、public的类不是必须的。<br>3、在源文件中只要有一个class的定义，那么必然就会生成一个对应的class文件。<br>4、 public的类可以没有，但是如果又public修饰的类名必须和源文件名保持一致。<br>5、public的类有且只能有一个。<br>6、测试想从哪个入口进去执行，就加载哪个类：java 类名。</p><p>常见错误：<br>1、没有定义则编译报错：找不到符号。<br>2、找不带文件<br>3、单词拼写问题<br>4、括号匹配问题<br>5、中英文问题</p><p>程序解析：<br>• 首先编写java源代码程序，扩展名.java<br>• 在命令行模式中，输入javac命令对源代码进行编译，生成字节码文件<br>    • javac 源文件名.java<br>• 编译完成后，如果没有报错信息，输入java命令对class字节码文件进行解释运行,执行时不需要添加.class扩展名<br>    • java HelloWorld</p><p>初学者编程应养成习惯：先将思路用注释方式写出来再进行编程。</p><p>练习题：</p><p><img src="/img/DAY04-1.png" alt="overwrote existing file"></p><p>作业1：</p><p><img src="/img/day04-2.png" alt="upload successful"></p><p>作业2：</p><p><img src="/img/day04-3.png" alt="upload successful"></p>]]></content>
      
      
      <categories>
          
          <category> 动力节点JavaSE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAY03 笔记</title>
      <link href="/2022/01/16/DAY03-%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/01/16/DAY03-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>1、Java语言的特性</p><pre><code>1.1、简单性    在Java语言当中真正操作内存的是：JVM（Java虚拟机）    所有的java程序都是运行在Java虚拟机当中的。    而Java虚拟机执行过程中再去操作内存。    对于C或者C++来说程序员都是可以直接通过指针操作内存的。    C或者C++更灵活，可以直接程序员操作内存，但是要求程序员技术精湛。    C语言或者C++更有驾驭感。    Java语言屏蔽了指针概念，程序员不能直接操作指针，或者说程序员    不能直接操作内存。这种方式有优点也有缺点：        优点：不容易导致内存泄漏。（简单了。）        缺点：效率问题，包括驾驭感比较差。    飞机航行：        如果是C语言表示程序员是飞机驾驶员。        如果是Java语言表示程序员是飞机上的乘客。    Java语言底层是C++，所以JVM是用C++语言写好的一个虚拟的电脑。    JVM在哪里？告诉大家，安装了JDK之后，JVM就代表安装好了。    内存是什么？        对于计算机来说：最主要的几个部件是什么？            CPU：                中央处理器，相当于人类的大脑，负责发送并执行指令。                是整个计算机的指挥官。                CPU是负责计算的，负责运算的。                10 + 20 = 30                CPU负责将30这个结果计算出来。                但是在计算过程中有三个数据需要临时找个空间存储一下：                    这三个数据分别是：10 20 30            内存：                程序运行过程当中的临时数据存储空间。                断电之后或者关机之后内存中的数据就消失了。            硬盘：                持久化设备，硬盘上的数据不会因断电而丢失。            主板：                相当于人类的躯干，是一个载体：                    CPU、内存条、硬盘等主要的部件都是放在主板上的，                    主板上有很多线，将以上的部件链接起来。            .....1.2、java是堪称完全面向对象的。    面向对象更容易让人理解，人类通常是以对象的方式认知世界的。    采用面向对象的方式可以让复杂问题简单化。1.3、健壮性    主要是因为Java中有一种机制：        自动垃圾回收机制（GC机制）。    java语言是健壮的，相对于C语言来说，C语言没有Java健壮。    Java不容易导致内存的泄漏。    C++或者C语言使用不当时很容易导致内存泄漏。    JVM负责调度GC机制。程序员不需要干涉。    以上讲解中又描述了这几个术语：        JVM（C++语言写的一个虚拟的计算机）、GC（垃圾回收机制）1.4、java完全/完美支持多线程并发。1.5、可移植性/跨平台    java语言只要编写一次，可以做到到处运行。    例如：java程序编写完之后，可以运行在windows操作系统上，    不需要做任何改动可以直接运行在Linux操作系统上，同样也    可以运行到MaC OS上面。    一次编写，到处运行。（平台改变了，程序不需要改。）    JVM这种机制实现了跨平台，那么这种机制优点和缺点分别是什么？        优点：一次编写到处运行，可以跨平台。        缺点：麻烦。对于运行java程序来说必须先有一个JVM。        就像你要想在网页上看视频，你必须先安装一个flash是一样的。    Java语言可以编写病毒吗？        可以，没问题。但是很难让用户中毒。        中毒的一般都是java程序员。所以很少有人编写java的病毒脚本。</code></pre><p>2、JDK、JRE、JVM三者之间的关系？<br>    JDK:Java开发工具箱<br>    JRE:java运行环境<br>    JVM:java虚拟机</p><pre><code>JDK包括JRE，JRE包括JVM。JVM是不能独立安装的。JRE和JDK都是可以独立安装的。有单独的JDK安装包。也有单独的JRE安装包。没有单独的JVM安装包。安装JDK的时候：JRE就自动安装了，同时JRE内部的JVM也就自动安装了。安装JRE的时候：JVM也就自动安装了。问题：    假设你在软件公司开发了一个新的软件，现在要去客户那边给客户把    项目部署一下，把项目跑起来，你需要安装JDK吗？        只需要安装JRE就行了。        JRE体积很小，安装非常便捷快速。问题：    为什么安装JDK的时候会自带一个JRE？        因为java程序员开发完程序之后，要测试这个程序，        让这个程序运行起来，需要JRE。所以JDK安装的时候        内部自带一个JRE。</code></pre><p>3、到目前为止，我们接触过的重点术语，总结一下：</p><pre><code>Java体系的技术被划分为三大块：    JavaSE：标准版    JavaEE：企业版    JavaME：微型版安装JDK之后：    JDK：java开发工具箱    JRE：Java运行环境    JVM：Java虚拟机</code></pre><p>4、对Java的加载与执行的理解（理论比较重要）<br>    java程序从编写到最终运行经历了哪些过程？？？？</p><pre><code>java程序非常重要的两个阶段：    编译阶段    运行阶段注意：java程序员直接编写的java代码（普通文本）是无法执行被JVM识别的。java程序员编写的java代码这种普通文本必须经过一个编译，将这个“普通文本代码”变成“字节码”，JVM能够识别“字节码”。java代码这种普通文本变成字节码的过程，被称为：编译。java代码这种普通文本被称为：java源代码。（你编写的代码是源代码）源代码不能直接执行，需要先进行编译，生成源代码对应的“字节码”JVM可以识别的是字节码。编译阶段和运行阶段可以在不同的操作系统上完成吗？    在windows上编译    编译之后生成了“字节码”    把“字节码”放到linux上运行    完全可以，因为Java是跨平台的。    可以做到一次编写到处运行。java源代码一旦编译之后，源代码可以删除吗？只留下字节码可以执行吗？    完全可以执行，因为源代码不参与程序的执行过程。    参与程序执行过程的是字节码。    但是最好不要删除源代码。因为有可能执行结果不是你需要的，    当执行结果不是你需要的时候，你可以重新打开源代码进行修改，    然后重新编译生成新的字节码，再重新执行。这样会有新的执行效果。放源代码的文件扩展名必须是：xxx.java并且需要注意的是：编译生成的字节码文件扩展名是：xxx.class没有为什么，死记硬背吧！！！！.java文件就是源文件，这个文件中编写源代码。.class文件就是字节码文件，这个文件是编译源代码而得到的。另外需要注意的是：    1个java源文件是可以编译生成多个class文件的。    最终运行的是class文件。问题：字节码文件是二进制文件吗？    字节码文件不是二进制文件。    如果是二进制的话，就不需要JVM了。    因为操作系统可以直接执行二进制。java程序从开发到最终运行经历了什么？    编译期：（可以在windows上）        第一步：在硬盘的某个位置（随意），新建一个xxx.java文件        第二步：使用记事本或者其它文本编辑器例如EditPlus打开xxx.java文件        第三步：在xxx.java文件中编写“符合java语法规则的”源代码。        第四步：保存（一定要将xxx.java文件保存一下）        第五步：使用编译器（javac【JDK安装后自带】）对xxx.java文件进行编译。        第六步：如果xxx.java文件中编写的源代码是符合语法规则的，编译会通过，        如果xxx.java文件中编写的源代码违背了语法规则，那么编译器会报错，编译器        报错之后class文件是不会生成的，只有编译通过了才会生成class字节码文件。        并且一个java源文件是可以生成多个class文件的。（编译实质上是检查语法）    运行期（JRE在起作用）：（可以在windows上，也可以在其他的OS上。）        第七步：如果是在Linux上运行，需要将windows上生成的class文件拷贝过去        不需要拷贝源代码，真正运行的是字节码。（但是源代码也不要删除，有用）        第八步：使用JDK自带的一个命令/工具：java（负责运行的命令/工具）执行字节码        第九步：往下的步骤就全部交给JVM了，就不需要程序员干涉了。        JVM会将字节码文件装载进去，然后JVM对字节码进行解释（解释器负责将字节码        解释为1010101010..等的二进制）        第十步：JVM会将生成的二进制码交给OS操作系统，操作系统会执行二进制码和        硬件进行交互。注意：在以上的过程中，需要使用两个非常重要的命令？    javac 命令，负责编译    java 命令，负责运行小插曲：    xxx.java源文件经过编译之后生成了A.class、B.class、C.class等文件，    那么我们称A是一个类、B是一个类、C是一个类。其中A、B、C是类的名字。    没有为什么，死记硬背，SUN公司的java语法就是这么规定的。    A/B/C是类的名称。A类、B类、C类。源文件中编写的代码叫做：源代码。以上是一个复杂的过程，那么缩减一下，程序员到底要干啥？    新建java文件    打开java文件    写java源代码    保存    javac命令编译    java命令运行    编写、编译、运行</code></pre><p>5、编写java中的第一个java程序：HelloWorld（你好世界：问世）<br>    这个程序不需要大家理解，大家照抄就行，因为目前我也不会讲解这个程序为什么这么写。<br>    主要是为了搭建java的开发环境，测试java的环境是否能用。</p><pre><code>第一步：安装文本编辑器（EditPlus）第二步：安装JDK（先下载JDK）    安装JDK13，直接下一步就行。    JDK13安装的时候内置了一个JRE，独立于JDK之外的JRE并没有生成。    对于java13来说，如果你希望生成一个独立于JDK之外的JRE的话需要执行特殊的命令。    这里先不讲，后期用到的时候再说。    注意的是：        JDK8安装的时候，不仅JDK内置了一个JRE，而且还会在JDK目录之外        独立的生成一个单独的JRE。（以前低版本的时候，JRE实际上是有2个。）        一个是JDK内置的，一个是独立于JDK之外的。    JDK的bin目录下有：        javac.exe 负责编译        java.exe 负责运行第三步：写代码    写一下第一个程序HelloWorld。    这个代码在此强调：        文件名照抄        文件内容代码严格照抄        照抄大小写        照抄任何一个环节        照抄标点符号        不要问为什么。        后面会解释。        括号：            []            ()            &#123;&#125;            都要成对写。第四步：编译第五步：运行</code></pre>]]></content>
      
      
      <categories>
          
          <category> 动力节点JavaSE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAY02 笔记</title>
      <link href="/2022/01/16/DAY02-%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/01/16/DAY02-%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>1、Java编程语言是Sun Microsystems公司的James Gosling在1990年创建的，于1995年公布于世（一般说Java诞生于1995年）。Java是一门面向对象的编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++难以理解的多继承、指针等概念。因此Java语言具有功能强大和简单易用的两个特征。</p><p>2、JAVA语言概述及发展史<br>    JDK（Java开发工具箱，做JAVA开发必须安装的，这是最根本的一个环境。）<br>    JDK不是集成开发环境，他是Java最核心的库。<br>    前往甲骨文官网下载JDK，exe文件</p><pre><code>98年的时候：Java升级到JDK1.2，Java被分为三大块：    J2SE：标准版（基础，要学Java，必须先学习SE。基础语法+基础库）    J2EE：企业版（专门为企业开发软件，为企业提供解决方案。例如：OA办公系统和医疗服务等。）Java诞生十周年改了名字：    JavaSE    JavaEE    JavaME</code></pre><p>3、Java语言的特性：<br>    1、简单性：Java语言底层采用C++语言实现。<br>    在Java语言中真正操作内存的是：JVM（Java虚拟机）所有的java程序中都是运行在Java虚拟机当中的。<br>    对于C或者C++更灵活，可以直接程序员操作内存，但要求程序员技术精湛。<br>    Java语言屏蔽了指针概念，程序员不能直接操作指针，或者说程序员不能直接操作内存。这种方式有优点也有缺点。<br>        优点：不容易导致内存泄漏。<br>        缺点：效率问题，包括驾驶感比较差。</p><pre><code>例如飞机航行：    如果是C语言表示程序员是飞机的驾驶员。    如果是Java表示程序员是飞机上的乘客。因为Java语言的低层是C++，所以JVM是用C++语言写好的一个虚拟的电脑。计算机安装好JDK后，JVM也代表安装完毕。2、面向对象    Java是完全面向对象的。    面向对象更容易让人理解，人类通常是以对象的方式认知世界的。    采用面向对象的方式可以让复杂的问题简单化。3、健壮性    主要是因为Java中有一种机制：        自动垃圾回收机制（GC机制）。    Java不容易导致内存泄漏    JVM负责调度GC机制，程序员不需要干涉。4、可移植性/跨平台    Java语言只要编写一次，可以做到到处运行。    例如：Java程序编写完之后，可以运行在windows操作系统上， 不需要做任何改动可以直接运行在Linux操作系统上，同样也可以运行在Mac os上。    一次编写，到处运行。（平台改变了，程序不需要改变。）    跨平台性：通过Java语言编写的应用程序在不同的系统平台上都可以运行    1.1、JVM这种机制实现了跨平台，那么这种机制优点和缺点是什么？        优点：一次编写到处运行，可以跨平台。        缺点：麻烦。对于运行Java程序来说必须要有一个JVM。就像你想在网页上看视频，你必须先安装一个flash一样。    1.2、Java语言可以编写病毒吗？        可以，没问题。但是很难让用户中毒。        中毒的一般都是java程序员。所以很少有人编写java的病毒脚本。</code></pre><p>4、Java完全/完美支持多线程并发</p><p>5、JDK、JRE、JVM三者之间的关系？<br>    JDK：Java开发工具箱<br>    JRE：Java运行环境<br>    JVM：Java虚拟机</p><pre><code>JDK包括JRE，JRE包括JVMJVM不可以独立安装。JRE和JDK都是可以独立安装的。也有单独的JDK的安装包，没有单独的JVM安装包。安装JDK的时候：JRE就自动安装了，同时JRE内部的JVM也就自动安装了。安装JRE的时候：JVM也就自动安装了。问题1：    假设你在软件公司开发了一个新的软件，现在要去客户那边给客户把项目部署一下，把项目跑起来，你需要安装JDK吗？        答：只需要安装JRE就可以了，JRE体积很小，安装非常便捷快速。问题2：    为什么安装JDK的时候会带一个JRE？        答：因为Java程序员开发完程序之后，要测试这个程序。        让这个程序运行起来，需要JRE。所以安装JDK的时候内部会自带一个JRE。</code></pre><p>6、Java程序的加载与执行的理解<br>    java程序从编写到最终运行经历了两个阶段：<br>1、编译阶段<br>    2、运行阶段</p><pre><code>注意：java程序员直接编写的java代码（普通文本）是无法执行被JVM识别的。java程序员编写到的java代码这种普通文本必须经过一个编译，将这个“普通文本代码”变成“字节码”，JVM能够识别“字节码”。java代码这种普通文本变成字节码的过程，被称为：编译。java代码这种普通文本被称为：java源代码。（你编写的代码是源代码）源代码不能直接执行，需要先进行编译，生成源代码对应的“字节码”JVM可以识别的是字节码。</code></pre><p>问题1：<br>    编译阶段和运行阶段可以在不同的操作系统上完成吗？<br>        答：完全可以，因为java是可跨平台的，可以做到一次编写，到处运行。<br>        在windows上编译<br>        编译之后生成“字节码”<br>        把“字节码”放在linux上运行。</p><p>问题2：<br>    Java源代码一旦编译之后，源代码可以删除吗？只留下字节码可以执行吗？<br>        答：完全可以执行，因为源代码不参与程序的执行过程。<br>        参与程序执行过程是字节码。<br>        但是最好不要删除源代码，因为有可能执行结果不是你需要的。<br>        当执行结果不是你需要的时候，你可以重新打开源代码进行修改，然后重新编译生成新的字节码，在重新执行。这样会有新的执行效果。</p><p>7、需要注意的是：<br>    1、放源代码的文件扩展名必须是：xxx.java<br>    2、编译生成的字节码文件扩展名是：xxx.class</p><pre><code>.java文件就是源文件，这个文件中编写源代码。.class文件就是字节码文件，这个文件是编译源代码而得到的。另外注意的是：    1个java文件是可以编译生成多个class文件的。    最终运行的是class文件。</code></pre><p>问题1：<br>    字节码文件是二进制文件吗？<br>        答：字节码文件不是二进制文件。<br>        如果是二进制的话，就不需要JVM了。<br>        因为操作系统可以直接执行二进制。</p><pre><code>Java程序的加载与执行的理解    java程序从编写到最终运行经历了两个阶段：    1、编译阶段    2、运行阶段注意：java程序员直接编写的java代码（普通文本）是无法执行被JVM识别的。java程序员编写到的java代码这种普通文本必须经过一个编译，将这个“普通文本代码”变成“字节码”，JVM能够识别“字节码”。java代码这种普通文本变成字节码的过程，被称为：编译。java代码这种普通文本被称为：java源代码。（你编写的代码时源代码）源代码不能直接执行，需要先进行编译，生成源代码对应的“字节码”JVM可以识别的是字节码。</code></pre><p>JAVA程序加载与运行：<br>    Java程序员从开发到最终运行经历了什么？<br>        第一步：在硬盘的某个位置，新建一个xxx.java文件<br>        第二步：使用记事本或者其他文本编辑器打开xxx.java文件<br>        第三步：在xxx.java文件中编写“符合java语法规则的”源代码。<br>        第四步：保存（一定要将xxx.java文件保存一下）<br>        第五步：使用编译器（javac【JDK安装后自带】）对xxx.java文件进行编译。<br>        第六步：如果xxx.java文件中编写的源代码是符合语法规则的，编译会通过，如果xxx.java文件中编写的源代码违背了语法规则，那么编译器会报错，编译器报错之后class文件是不会生成的，只有编译通过了之后才会生成class字节码文件。并且一个java源文件是可以生成多个class文件的。（编译实质上是检查语法）</p><pre><code>运行期：（可以在windows上，也可以在其他的os上。）    第七步：如果实在Linux上运行，需要将windows上生成的class文件拷贝过去，不需要拷贝源代码，真正运行的是字节码。（但是源代码也不要删除，有用）    第八步：使用JDK自带的一个命名/工具：java（负责运行的命令/工具）执行字节码    第九步：往下的步骤就全部交给JVM了，就不需要程序员干涉了。        JVM会将字节码文件全部装载进去，然后JVM对字节码进行解释（解释器负责将字节码解释为1010101010..等的二进制）    第十步：JVM会将生成的二进制代码交给os操作系统，操作系统会执行二进制码和硬件进行交互。⚠注意：在以上过程中，需要使用两个重要的命令    1、javac 命令，负责编译    2、java 命令，负责运行⚠当编译不能显示中文时，输入（两种方式）：    1、javac -encoding UTF-8 ***.java    2、记事本打开java源文件，另存为选择ANSI编码⚠当编译时出现：错误: 编码 GBK 的不可映射字符 (0xBA)    输入javac  -encoding utf-8  文件名.java</code></pre>]]></content>
      
      
      <categories>
          
          <category> 动力节点JavaSE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>出租车计价</title>
      <link href="/2022/01/16/%E5%87%BA%E7%A7%9F%E8%BD%A6%E8%AE%A1%E4%BB%B7-1/"/>
      <url>/2022/01/16/%E5%87%BA%E7%A7%9F%E8%BD%A6%E8%AE%A1%E4%BB%B7-1/</url>
      
        <content type="html"><![CDATA[<p>根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下：</p><ul><li>起步里程为3公里，起步费10元；</li><li>超起步里程后10公里内，每公里2元；</li><li>超过10公里以上的部分加收50%的回空补贴费，即每公里3元；</li><li>营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。<a id="more"></a></li></ul><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h2><p>输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h2><p>在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。</p><h2 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h2><blockquote><p>2.6    2</p></blockquote><h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h2><blockquote><p>10</p></blockquote><hr><h2 id="JavaScript代码："><a href="#JavaScript代码：" class="headerlink" title="JavaScript代码："></a>JavaScript代码：</h2><pre class="line-numbers language-handlebars" data-language="handlebars"><code class="language-handlebars">const readline =require('readline');const rl=readline.createInterface(&#123;    input:process.stdin,&#125;);let buf=[]rl.on('line',(line)=>&#123;    buf.push(line)&#125;)rl.on('close',()=>&#123;    const arr=buf[0].split(' ');    let money=10;    if(arr[0]>3&amp;&amp;arr[0]&lt;=10)&#123;        money+=(arr[0]-3) *2;    &#125;else if(arr[0]>10)&#123;        money+=7*2;        money+=(arr[0]-10) *3;    &#125;     money+=Math.floor(arr[1]/5)*2;   console.log(Math.round(money));&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> PTA JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAY01:DOS命令</title>
      <link href="/2020/08/15/DOS%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/08/15/DOS%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>1、常用DOS命令<br>    1.1、怎么打开DOS命令窗口？</p><blockquote><p><strong>win键+r（组合键）</strong>：可以打开”运行窗口”<br>在窗口文本框输入：<strong>cmd</strong><br>然后回车即可。</p></blockquote><p>1.2、什么是DOS命令呢？<br>在DOS命令窗口中才可以输入并执行DOS命令。<br>在最初的windows计算机中没有图形界面，只有DOS命令窗口。<br>也就是说通过执行DOS命令窗口可以完成文件的创建、保存、删除等一系列操作。</p><p>1.3、在DOS命令窗口中如何复制内容？</p><blockquote><p>选中内容- -&gt;按ctrl+c键复制- -&gt;在粘贴的位置点击鼠标右键<br>即可完成内容的复制粘贴</p></blockquote><p>1.4、DOS命令窗口中如何切换盘符？<br><strong>直接输入盘符即可。</strong><br>C：回车<br>D：回车<br>就🆗了。</p><p>当切换到D盘时，当前的根路径是：D:&gt;<br>当前路径就是当前所在的位置。</p><p>1.5、DOS命令窗口如何切换目录？<br>使用cd命令来完成目录的切换：cd即change directory（改变目录）<br>cd的语法格式为：</p><blockquote><p><strong>cd + 路径</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200816001703606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjYyOTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200816001758345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjYyOTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 动力节点JavaSE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaSE </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Hexo添加live2d看板娘</title>
      <link href="/2020/08/10/Hexo%E6%B7%BB%E5%8A%A0live2d%E7%9C%8B%E6%9D%BF%E5%A8%98%E6%A8%A1%E5%9E%8B/"/>
      <url>/2020/08/10/Hexo%E6%B7%BB%E5%8A%A0live2d%E7%9C%8B%E6%9D%BF%E5%A8%98%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>haruto这个模型 我爱了</p><p><img src="https://img-blog.csdnimg.cn/2020081012063219.PNG" alt="在这里插入图片描述"></p><h2 id="1-首先安装npm包"><a href="#1-首先安装npm包" class="headerlink" title="1.首先安装npm包"></a>1.首先安装npm包</h2><ul><li>配置环境变量 </li><li>打开cmd.exe,输入:</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//查看版本号是否安装成功$ <span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-下载hexo"><a href="#2-下载hexo" class="headerlink" title="2.下载hexo"></a>2.下载hexo</h2><ul><li>输入命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//下载hexo客户端$ <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>同样环境变量</li></ul><h2 id="3-在本地新建文件myblog-作为博客资源文件夹"><a href="#3-在本地新建文件myblog-作为博客资源文件夹" class="headerlink" title="3.在本地新建文件myblog(作为博客资源文件夹)"></a>3.在本地新建文件myblog(作为博客资源文件夹)</h2><ul><li>输入命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//初始化刚新建的myblog文件夹$ hexo init myblog$ <span class="token builtin class-name">cd</span> blog$ hexo instal<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这时blog就会生成以下文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20200810115944114.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjYyOTkyOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="4-第一个博客出来了，我们试试运行"><a href="#4-第一个博客出来了，我们试试运行" class="headerlink" title="4.第一个博客出来了，我们试试运行"></a>4.第一个博客出来了，我们试试运行</h2><ul><li>输入命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//启动命令<span class="token punctuation">(</span>完整命令:hexo server<span class="token punctuation">)</span>$ hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-回到当前窗口myblog路径输入命令："><a href="#5-回到当前窗口myblog路径输入命令：" class="headerlink" title="5.回到当前窗口myblog路径输入命令："></a>5.回到当前窗口myblog路径输入命令：</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//下载live2d包$ <span class="token function">npm</span> <span class="token function">install</span> --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>再下载模型</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//下载模型$ <span class="token function">npm</span> <span class="token function">install</span> live2d-widget-model-hibiki<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>#更多模型选择</strong></p><p>live2d-widget-model-chitose<br>live2d-widget-model-epsilon2_1<br>live2d-widget-model-gf<br>live2d-widget-model-haru/01 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haru/02 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haruto<br>live2d-widget-model-hibiki<br>live2d-widget-model-hijiki<br>live2d-widget-model-izumi<br>live2d-widget-model-koharu<br>live2d-widget-model-miku<br>live2d-widget-model-ni-j<br>live2d-widget-model-nico<br>live2d-widget-model-nietzsche<br>live2d-widget-model-nipsilon<br>live2d-widget-model-nito<br>live2d-widget-model-shizuku<br>live2d-widget-model-tororo<br>live2d-widget-model-tsumiki<br>live2d-widget-model-unitychan<br>live2d-widget-model-wanko<br>live2d-widget-model-z16</p><h2 id="6-下载完模型后在根目录的-node-modules-文件夹下找到刚才下载的live2d-widget-model-hibiki模型，将其复制到新建目录-live2d-models-下"><a href="#6-下载完模型后在根目录的-node-modules-文件夹下找到刚才下载的live2d-widget-model-hibiki模型，将其复制到新建目录-live2d-models-下" class="headerlink" title="6.下载完模型后在根目录的 node_modules 文件夹下找到刚才下载的live2d-widget-model-hibiki模型，将其复制到新建目录 live2d_models 下"></a>6.下载完模型后在根目录的 node_modules 文件夹下找到刚才下载的live2d-widget-model-hibiki模型，将其复制到新建目录 live2d_models 下</h2><p><img src="https://img-blog.csdnimg.cn/20200810120349315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjYyOTkyOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="7-在根目录-config-yml配置下添加以下参数，唯一改变是参数model-use-是下载模型名称"><a href="#7-在根目录-config-yml配置下添加以下参数，唯一改变是参数model-use-是下载模型名称" class="headerlink" title="7.在根目录_config.yml配置下添加以下参数，唯一改变是参数model.use 是下载模型名称"></a>7.在根目录_config.yml配置下添加以下参数，唯一改变是参数model.use 是下载模型名称</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#参数配置</span>live2d: enable: <span class="token boolean">true</span> scriptFrom: <span class="token builtin class-name">local</span> pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: <span class="token boolean">false</span> debug: <span class="token boolean">false</span> model:   use: live2d-widget-model-haruto   <span class="token comment">#下载模型参数</span> display:   position: right   width: <span class="token number">150</span>   height: <span class="token number">300</span> mobile:   show: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="最后再次运行-hexo-s，看效果，右下角萌萌哒看板娘出来了"><a href="#最后再次运行-hexo-s，看效果，右下角萌萌哒看板娘出来了" class="headerlink" title="最后再次运行$hexo s，看效果，右下角萌萌哒看板娘出来了"></a>最后再次运行$hexo s，看效果，右下角萌萌哒看板娘出来了</h2><p><img src="https://img-blog.csdnimg.cn/20200810120617570.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjYyOTkyOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习日常 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
